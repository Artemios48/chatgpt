import telebot
from datetime import datetime
import openpyxl
from openpyxl import load_workbook
from telebot import types

fn = 'db.xlsx'
wb = load_workbook(fn)
ws = wb['data']
print(f'–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω a{ws.max_row}')

bot = telebot.TeleBot("")
@bot.message_handler(content_types=["text"])

def start(message):
    if message.text == "/start":
        markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
        btn_adm = types.KeyboardButton('–ö–æ–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏')
        btn_1 = types.KeyboardButton('–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ\–∑–∞–º–µ—á–∞–Ω–∏–µ')
        markup.add(btn_adm, btn_1)
        bot.send_message(message.from_user.id,'–ü—Ä–∏–≤–µ—Ç! üëã  –Ø ‚Äî ¬´–ö–æ–º—Ñ–æ—Ä—Ç–Ω–∞—è –≥–∞—Ä–º–æ–Ω–∏—è¬ª, –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –≤ –≥–∏–º–Ω–∞–∑–∏–∏ ¬´–ì–∞—Ä–º–æ–Ω–∏—è¬ª! –ú—ã –≤–º–µ—Å—Ç–µ —Å –≤–∞–º–∏ –¥–µ–ª–∞–µ–º —à–∫–æ–ª—É –∫–æ–º—Ñ–æ—Ä—Ç–Ω–µ–µ –∏ —É—é—Ç–Ω–µ–µ, —É—á–∞—Å—Ç–≤—É—è –≤ –ø—Ä–æ–µ–∫—Ç–µ ¬´–ö–æ–º—Ñ–æ—Ä—Ç–Ω–∞—è —à–∫–æ–ª–∞¬ª. –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –º–Ω–µ –≤–∞—à–∏ –∏–¥–µ–∏, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –∑–∞–º–µ—á–∞–Ω–∏—è ‚Äî –≤–º–µ—Å—Ç–µ –º—ã —Å–¥–µ–ª–∞–µ–º ¬´–ì–∞—Ä–º–æ–Ω–∏—é¬ª –µ—â–µ –ª—É—á—à–µ! üòä', reply_markup=markup)
        bot.register_next_step_handler(message, change)
    else:
        bot.send_message(message.from_user.id,'–ù–∞–ø–∏—à–∏—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã')
def change(message):
    id = str(message.from_user.id)
    if message.text == '–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ\–∑–∞–º–µ—á–∞–Ω–∏–µ':
        for row in range(2,ws.max_row+1):
            id_ = ws.cell(row=row, column=7).value
            if id_ == id:
                name = ws.cell(row=row, column=1).value
                surname = ws.cell(row=row, column=2).value
                username = ws.cell(row=row, column=3).value
                print(name,surname,username,id)#—É–¥–∞–ª–∏—Ç—å
                bot.send_message(message.from_user.id,'–£ –≤–∞—Å –ø–æ—è–≤–∏–ª–∏—Å—å –µ—â—ë –∏–¥–µ–∏? –ü–∏—à–∏—Ç–µ –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ\–∑–∞–º–µ—á–∞–Ω–∏–µ')
                bot.register_next_step_handler(message, lambda msg: get_inf_st(msg, name, surname, username))
                break
        else:
            bot.send_message(message.from_user.id,'–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ —Å–ª–µ–¥—É—é—â–µ–π —Ñ–æ—Ä–º–µ: –ò–º—è –§–∞–º–∏–ª–∏—è, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ\–∑–∞–º–µ—á–∞–Ω–∏–µ')
            bot.register_next_step_handler(message, get_inf)
    elif message.text == '–ö–æ–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏':
        bot.send_message(message.from_user.id,'–û—Ç–ø–∞—Ä–≤—å—Ç–µ –≤–∞—à –∫–æ–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–ø—Ä–æ—Å–æ–≤')
        bot.register_next_step_handler(message, get_adm)
    else:
        bot.send_message(message.from_user.id,'–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ.')
        bot.register_next_step_handler(message, change)

def get_inf_st(message, name, surname, username):
    _1 = message.text
    time = datetime.now().strftime("%H:%M:%S %d.%m.%Y")
    id = str(message.from_user.id)
    ws.append([name,surname,username,_1,time,'–ù–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ',id])
    wb.save(fn)
    wb.close()
    bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! –í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ/–∑–∞–º–µ—á–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω–æ.')
    bot.register_next_step_handler(message, change)

def get_inf(message):
    id = str(message.from_user.id)
    username = str(message.from_user.username)
    time = datetime.now().strftime("%H:%M:%S %d.%m.%Y")
    try:
        name_surname, _1 = map(str,message.text.split(','))
        name,surname = name_surname.split(' ')
        ws.append([name,surname,username,_1,time,'–ù–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ',id])
        wb.save(fn)
        wb.close()
        bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! –í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ/–∑–∞–º–µ—á–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω–æ.')
        bot.register_next_step_handler(message, change)
    except:
        bot.send_message(message.chat.id, '–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø–æ —Ñ–æ—Ä–º–µ —É–∫–∞–∑–∞–Ω–Ω–æ–π –≤—ã—à–µ! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.')
        bot.register_next_step_handler(message, get_inf)

def get_adm(message):
    if message.text == '12345':
        bot.send_message(message.from_user.id,'–†–µ–∂–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∞–∫—Ç–∏–≤–µ–Ω')
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_send_db = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å –æ—Ç—á—ë—Ç')
        btn_view = types.KeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–¥–µ–∏')
        btn_exit = types.KeyboardButton('–í—ã—Ö–æ–¥')
        markup.add(btn_send_db, btn_view, btn_exit)
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=markup)
        bot.register_next_step_handler(message, handle_adm_choice)
    else:
        bot.send_message(message.from_user.id,'–ö–æ–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–≤–µ–¥—ë–Ω –Ω–µ –≤–µ—Ä–Ω–æ')
        bot.register_next_step_handler(message, get_adm)

def handle_adm_choice(message):
    if message.text == '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–¥–µ–∏':
        show_ideas(message)
        bot.register_next_step_handler(message, handle_adm_choice)
    elif message.text == '–ü–æ–ª—É—á–∏—Ç—å –æ—Ç—á—ë—Ç':
        send_db(message)
        bot.register_next_step_handler(message, handle_adm_choice)
    elif message.text == '–í—ã—Ö–æ–¥':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_adm = types.KeyboardButton('–ö–æ–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏')
        btn_1 = types.KeyboardButton('–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ\–∑–∞–º–µ—á–∞–Ω–∏–µ')
        markup.add(btn_adm, btn_1)
        bot.send_message(message.chat.id, '–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.', reply_markup=markup) 
        bot.register_next_step_handler(message, change)
    else:
        bot.send_message(message.from_user.id,'–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ.')
        bot.register_next_step_handler(message, handle_adm_choice)
    


def show_ideas(message):
    has_new_ideas = False
    for row in range(2,ws.max_row+1):
        status = ws.cell(row=row, column=6).value
        if status == '–ù–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ':
            has_new_ideas = True
            name = ws.cell(row=row, column=1).value
            surname = ws.cell(row=row, column=2).value
            username = ws.cell(row=row, column=3).value
            problem = ws.cell(row=row, column=4).value
            time = ws.cell(row=row, column=5).value
            id = ws.cell(row=row, column=7).value
        if status == '–ù–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ':
            if username == 'None':
                bot.send_message(message.chat.id,f'{name} {surname} \n https://web.telegram.org/k/#{id} \n ‚ÅâÔ∏è{problem} \n üïí{time} \n üîî{status}')
            else:
                bot.send_message(message.chat.id,f'{name} {surname} \n @{username} \n ‚ÅâÔ∏è{problem} \n üïí{time} \n üîî{status}')
            ws.cell(row=row, column=6).value = '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ'  # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
            wb.save(fn)
    if not has_new_ideas:
        bot.send_message(message.chat.id, "–ù–æ–≤—ã—Ö –∏–¥–µ–π –ø–æ–∫–∞ –Ω–µ—Ç.")

def send_db(message):
    with open(fn, 'rb') as file:
        bot.send_document(message.chat.id, file)
        

bot.polling(none_stop=True, interval = 0)